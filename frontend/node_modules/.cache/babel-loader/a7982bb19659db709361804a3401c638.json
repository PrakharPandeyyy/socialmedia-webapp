{"ast":null,"code":"var _jsxFileName = \"/Users/prakhar/Desktop/socialmedia-webapp/frontend/src/components/login/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport LoginInput from \"../inputs/loginInput\";\nimport { useState } from \"react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginInfos = {\n  email: \"\",\n  password: \"\"\n};\nexport default function LoginForm(_ref) {\n  _s();\n\n  let {\n    setVisible\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [login, setLogin] = useState(loginInfos);\n  const {\n    email,\n    password\n  } = login;\n  console.log(login);\n\n  const handleLoginChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLogin({ ...login,\n      [name]: value\n    });\n  };\n\n  const loginValidation = Yup.object({\n    email: Yup.string().required(\"Email Address is required\").email(\"Must be a Valid Email\"),\n    password: Yup.string().required(\"Password is required\").min(8, \"Password must be at least 8 characters\")\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const loginSubmit = async () => {\n    try {\n      setLoading(true);\n      const {\n        data\n      } = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/login`, {\n        email,\n        password\n      });\n      setError(\"\");\n      setSuccess(data.message);\n      dispatch({\n        type: \"LOGIN\",\n        payload: data\n      });\n      Cookies.set(\"user\", JSON.stringify(data));\n      navigate(\"/\");\n    } catch (err) {\n      setLoading(false);\n      setSuccess(\"\");\n      setError(err.response.data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login_wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_1\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../../icons/facebook.svg\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Facebook Helps you connects with peoples all around the globe.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login_2_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: {\n            email,\n            password\n          },\n          validationSchema: loginValidation,\n          onSubmit: () => loginSubmit(),\n          children: Formik => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(LoginInput, {\n              type: \"text\",\n              name: \"email\",\n              placeholder: \"Email address or phone number\",\n              onChange: handleLoginChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LoginInput, {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Password\",\n              onChange: handleLoginChange,\n              bottom: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"blue_btn\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgot\",\n          className: \"forgot_password\",\n          children: \"Forgotten Password ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error_text\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sign_splitter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"blue_btn open_signup\",\n          onClick: () => setVisible(true),\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"sign_extra\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Create a Page \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), \" for a celebrity, band or business.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"13iY6qdIBebkVxz2kGn5fa3z4XE=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/prakhar/Desktop/socialmedia-webapp/frontend/src/components/login/LoginForm.js"],"names":["Form","Formik","Yup","Link","LoginInput","useState","DotLoader","axios","useDispatch","useNavigate","Cookies","loginInfos","email","password","LoginForm","setVisible","dispatch","navigate","login","setLogin","console","log","handleLoginChange","e","name","value","target","loginValidation","object","string","required","min","error","setError","success","setSuccess","loading","setLoading","loginSubmit","data","post","process","env","REACT_APP_BACKEND_URL","message","type","payload","set","JSON","stringify","err","response"],"mappings":"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","sourcesContent":["import { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport LoginInput from \"../inputs/loginInput\";\nimport { useState } from \"react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nconst loginInfos = {\n  email: \"\",\n  password: \"\",\n};\n\nexport default function LoginForm({ setVisible }) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [login, setLogin] = useState(loginInfos);\n  const { email, password } = login;\n  console.log(login);\n  const handleLoginChange = (e) => {\n    const { name, value } = e.target;\n    setLogin({ ...login, [name]: value });\n  };\n  const loginValidation = Yup.object({\n    email: Yup.string()\n      .required(\"Email Address is required\")\n      .email(\"Must be a Valid Email\"),\n    password: Yup.string()\n      .required(\"Password is required\")\n      .min(8, \"Password must be at least 8 characters\"),\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const loginSubmit = async () => {\n    try {\n      setLoading(true);\n      const {data} = await axios.post(\n        `${process.env.REACT_APP_BACKEND_URL}/login`,\n        {\n          email,\n          password,\n        }\n      );\n      setError(\"\");\n      setSuccess(data.message);\n     \n      dispatch({ type: \"LOGIN\", payload: data });\n      Cookies.set(\"user\", JSON.stringify(data));\n      navigate(\"/\");\n    } catch (err) {\n      setLoading(false);\n      setSuccess(\"\");\n      setError(err.response.data.message);\n    }\n  };\n  return (\n    <div className=\"login_wrap\">\n      <div className=\"login_1\">\n        <img src=\"../../icons/facebook.svg\" alt=\"logo\" />\n        <span>\n          Facebook Helps you connects with peoples all around the globe.\n        </span>\n      </div>\n      <div className=\"login_2\">\n        <div className=\"login_2_wrap\">\n          <Formik\n            enableReinitialize\n            initialValues={{\n              email,\n              password,\n            }}\n            validationSchema={loginValidation}\n            onSubmit={() => loginSubmit()}\n          >\n            {(Formik) => (\n              <Form>\n                <LoginInput\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Email address or phone number\"\n                  onChange={handleLoginChange}\n                />\n                <LoginInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={handleLoginChange}\n                  bottom\n                />\n                <button type=\"submit\" className=\"blue_btn\">\n                  Login\n                </button>\n              </Form>\n            )}\n          </Formik>\n          <Link to=\"/forgot\" className=\"forgot_password\">\n            Forgotten Password ?\n          </Link>\n          {error && <div className=\"error_text\">{error}</div>}\n          <div className=\"sign_splitter\"></div>\n          <button\n            className=\"blue_btn open_signup\"\n            onClick={() => setVisible(true)}\n          >\n            Create Account\n          </button>\n        </div>\n        <Link to=\"/\" className=\"sign_extra\">\n          <b>Create a Page </b> for a celebrity, band or business.\n        </Link>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}